# Generated by Django 5.0.7 on 2024-08-21 12:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChemicalCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(help_text='Enter the chemical category name.', max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Chemical Categories',
                'db_table': 'chemical_categories',
            },
        ),
        migrations.CreateModel(
            name='EquipmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Equipment Categories',
            },
        ),
        migrations.CreateModel(
            name='Chemicals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the chemical name.', max_length=200)),
                ('composition', models.CharField(choices=[('solid', 'Solid'), ('liquid', 'Liquid'), ('gas', 'Gas')], help_text='Select the chemical composition.', max_length=10)),
                ('quantity', models.IntegerField(help_text='Enter the quantity of the chemical.')),
                ('chemical_units', models.CharField(blank=True, choices=[('g', 'Gram'), ('mg', 'Milligram'), ('μg', 'Microgram'), ('kg', 'Kilogram'), ('L', 'Liter'), ('mL', 'Milliliter'), ('μL', 'Microliter'), ('mol', 'Mole'), ('mmol', 'Millimole'), ('μmol', 'Micromole'), ('M', 'Molarity'), ('m', 'Molality'), ('X', 'Mole fraction'), ('ppm', 'Parts per million'), ('ppb', 'Parts per billion'), ('J', 'Joule'), ('kJ', 'Kilojoule'), ('eV', 'Electronvolt'), ('°C', 'Degrees Celsius'), ('°F', 'Degrees Fahrenheit'), ('K', 'Kelvin'), ('Pa', 'Pascal'), ('kPa', 'Kilopascal'), ('atm', 'Atmosphere'), ('mmHg', 'Millimeters of mercury')], help_text='Select the chemical units.', max_length=10, null=True)),
                ('expiration_date', models.DateField(help_text='Enter the expiration date of the chemical.')),
                ('availability', models.BooleanField(default=True, help_text='Select if the chemical is available.')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('chemical_category', models.ForeignKey(help_text='Select the chemical category.', on_delete=django.db.models.deletion.CASCADE, to='inventory.chemicalcategory')),
            ],
            options={
                'verbose_name_plural': 'Chemicals',
                'db_table': 'chemicals',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_name', models.CharField(help_text='Enter the equipment name.', max_length=100)),
                ('equipment_model', models.CharField(help_text='Enter the equipment model.', max_length=100)),
                ('equipment_model_number', models.CharField(help_text='Enter the equipment model number.', max_length=100)),
                ('equipment_purchase_date', models.DateField(help_text='Enter the equipment purchase date.')),
                ('equipment_model_cost', models.DecimalField(decimal_places=2, help_text='Enter the equipment model cost.', max_digits=10)),
                ('equipment_model_quantity', models.IntegerField(help_text='Enter the equipment model quantity.')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('equipment_category', models.ForeignKey(help_text='Select the equipment category.', on_delete=django.db.models.deletion.CASCADE, to='inventory.equipmentcategory')),
            ],
            options={
                'verbose_name_plural': 'Equipment',
                'db_table': 'equipment',
            },
        ),
    ]
